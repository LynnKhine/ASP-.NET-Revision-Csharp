[
  {
    "ContainingType": "APItest.Controllers.MovieController",
    "Method": "CreateMovie",
    "RelativePath": "api/Movie/CreateMovie",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "APItest.Models.Movie.CreateMovieRequestModel",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "APItest.Controllers.MovieController",
    "Method": "DeleteMovieById",
    "RelativePath": "api/Movie/DeleteMovieById",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "APItest.Controllers.MovieController",
    "Method": "GetMovieById",
    "RelativePath": "api/Movie/GetMovieById",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "APItest.Controllers.MovieController",
    "Method": "GetMovieList",
    "RelativePath": "api/Movie/GetMovieList",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "APItest.Controllers.MovieController",
    "Method": "UpdateMovie",
    "RelativePath": "api/Movie/UpdateMovie",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": false
      },
      {
        "Name": "title",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "genre",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "releaseDate",
        "Type": "System.DateTime",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "APItest.Controllers.StudentController",
    "Method": "CreateStudent",
    "RelativePath": "api/Student/CreateStudent",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "APItest.Models.Student.CreateStudentRequestModel",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "APItest.Controllers.StudentController",
    "Method": "DeleteStudentById",
    "RelativePath": "api/Student/DeleteStudentById",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "APItest.Controllers.StudentController",
    "Method": "GetStudentById",
    "RelativePath": "api/Student/GetStudentById",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "APItest.Controllers.StudentController",
    "Method": "GetStudentList",
    "RelativePath": "api/Student/GetStudentList",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "APItest.Controllers.StudentController",
    "Method": "UpdateStudent",
    "RelativePath": "api/Student/UpdateStudent",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "name",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "idnumber",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "phone",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "email",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "address",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "updateduserid",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "updateddatetime",
        "Type": "System.DateTime",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "APItest.Controllers.UserController",
    "Method": "GetHelloWorld",
    "RelativePath": "User/GetHelloWorld",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "APItest.Controllers.UserController",
    "Method": "GetStatusById",
    "RelativePath": "User/GetStatusById",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "APItest.Controllers.UserController",
    "Method": "UserInfo",
    "RelativePath": "User/UserInfo",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "APItest.Models.UserRequestModel",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "APItest.Controllers.UserController",
    "Method": "UserInfoList",
    "RelativePath": "User/UserInfoList",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "APItest.Controllers.WeatherForecastController",
    "Method": "Get",
    "RelativePath": "WeatherForecast",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[APItest.WeatherForecast, APItest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ],
    "EndpointName": "GetWeatherForecast"
  }
]